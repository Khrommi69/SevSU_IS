#include <iostream>
#include <windows.h>

//====================================================================================================
// Класс - прямоугольник
class rectangle {
	// Длина - a; ширина - b;
	int a, b;
public:
	//конструктор по умолчанию
	rectangle() { a = 15; b = 10; };

	//конструктор с параметрами
	rectangle(int _a, int _b) { a = _a; b = _b; };

	//деструктор
	~rectangle() = default;

	// ! унарный метод класса, проверяющий, является ли прямоугольник квадратом
	// true - квадрат; false - прямоугольник
	bool operator!() { return ((a == b) ? true : false); };

	// == бинарный метод класса, сравнивающий два прямоугольника на равенство площадей
	// true - равные; false - разные
	bool operator==(rectangle ob2) { return (((a*b) == (ob2.a*ob2.b)) ? true : false); };

	// - унарная дружественная функция определения разности между длинами сторон
	friend int operator-(rectangle obj);

	// + бинарная дружественную функция нахождения общей площади фигур
	friend long operator+(rectangle obj1, rectangle obj2);

	// функция перегрузки оператора вывода в поток >>
	friend std::ostream & operator<< (std::ostream &out, const rectangle *obj);

	// функция перегрузки оператора ввода из потока >>
	friend std::istream & operator>> (std::istream &in, rectangle *obj);
};

//====================================================================================================
// Функция перегрузки оператора вывода в поток
std::ostream & operator<<(std::ostream &out, const rectangle *obj) {
	out << "Длина = " << obj->a << "; ширина = " << obj->b << std::endl << std::endl;
	return out;
}

// Функция перегрузки оператора ввода из потока
std::istream & operator>>(std::istream &in, rectangle *obj) {
	std::cout << "Введите длину прямоугольнка: ";
	in >> obj->a;
	std::cout << "Введите ширину прямоугольнка: ";
	in >> obj->b;
	std::cout << std::endl;
	return in;
}

// - унарная дружественная функция определения разности между длинами сторон
int operator-(rectangle obj) {
	return abs(obj.a-obj.b);
}

// + бинарная дружественная функция нахождения общей площади фигур
long operator+(rectangle obj1, rectangle obj2) {
	return (obj1.a*obj1.b + obj2.a*obj2.b);
}


//=====================================================================================================
//                                              MAIN
//=====================================================================================================
int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	system("color B0");

	rectangle *obj1 = new rectangle();
	rectangle *obj2 = new rectangle();

	char ch = '0';
	while(1) {
		std::cin >> obj1 >> obj2;
		std::cout << obj1 << obj2;

		//=================================================================================================
		std::cout << "Унарный метод класса, проверяющий, является ли прямоугольник квадратом" << std::endl;
		if (!(*obj1)) {
			std::cout << "Первый прямоугольник является квадратом" << std::endl;
		}
		else {
			std::cout << "Первый прямоугольник не является квадратом" << std::endl;
		}
		if (obj2->operator!()) {
			std::cout << "Второй прямоугольник является квадратом" << std::endl;
		}
		else {
			std::cout << "Второй прямоугольник не является квадратом" << std::endl;
		}
		std::cout << std::endl;

		//=================================================================================================
		std::cout << "Бинарный метод класса, сравнивающий два прямоугольника на равенство площадей" << std::endl;
		// if (*obj1 == *obj2)
		if (obj1->operator==(*obj2)) {
			std::cout << "площади прямоугольников равны" << std::endl;
		}
		else {
			std::cout << "площади прямоугольников не равны" << std::endl;
		}
		std::cout << std::endl;

		//=================================================================================================
		std::cout << "Унарная дружественная функция определения разности между длинами сторон" << std::endl;
		std::cout << "Разность между длинами строк первого прямоугольника = " << -*obj1 << std::endl;
		std::cout << "Разность между длинами строк второго прямоугольника = " << operator-(*obj2) << std::endl;
		std::cout << std::endl;

		//=================================================================================================
		std::cout << "Бинарная дружественная функция нахождения общей площади фигур" << std::endl;
		// *obj1+*obj2
		std::cout << "Общая площадь прямоугольников = " << operator+(*obj1, *obj2) << std::endl;
		std::cout << std::endl;

		//=================================================================================================
		std::cout << "Выйти? (y/n) >> ";
		std::cin >> ch;
		if (ch == 'y') break;
		system("cls");
	}

	delete obj1;
	delete obj2;

	return 0;
}